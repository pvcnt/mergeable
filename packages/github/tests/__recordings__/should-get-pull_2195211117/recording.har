{
  "log": {
    "_recordingName": "should get pull",
    "creator": {
      "comment": "persister:fs",
      "name": "Polly.JS",
      "version": "6.0.6"
    },
    "entries": [
      {
        "_id": "c7e34c2748dbf4298449127460b015e7",
        "_order": 0,
        "cache": {},
        "request": {
          "bodySize": 2384,
          "cookies": [],
          "headers": [
            {
              "name": "accept",
              "value": "application/vnd.github.v3+json"
            },
            {
              "name": "authorization",
              "value": "token ghp_token"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "user-agent",
              "value": "octokit.js/0.0.0-development octokit-core.js/6.1.2 Node.js/22"
            }
          ],
          "headersSize": 273,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"query pull($id: ID!) {\\n      node(id: $id) {\\n        ... on PullRequest {\\n          number\\n          title\\n          repository {\\n            nameWithOwner\\n          }\\n          createdAt\\n          updatedAt\\n          state\\n          url\\n          isDraft\\n          closed\\n          merged\\n          reviewDecision\\n          additions\\n          deletions\\n          author {\\n            __typename\\n            login\\n            avatarUrl\\n          }\\n          statusCheckRollup {\\n            state\\n          }\\n          comments(first: 100) {\\n            totalCount\\n            nodes {\\n              id\\n              author {\\n                __typename\\n                login\\n                avatarUrl\\n              }\\n              body\\n              createdAt\\n            }\\n          }\\n          reviewRequests(first: 100) {\\n            totalCount\\n            nodes {\\n              requestedReviewer {\\n                __typename\\n                ... on Bot {\\n                  login\\n                  avatarUrl\\n                }\\n                ... on Mannequin {\\n                  login\\n                  avatarUrl\\n                }\\n                ... on User {\\n                  login\\n                  avatarUrl\\n                }\\n                ... on Team {\\n                  combinedSlug\\n                }\\n              }\\n            }\\n          }\\n          reviews(first: 100) {\\n            totalCount\\n            nodes {\\n              id\\n              author {\\n                __typename\\n                login\\n                avatarUrl\\n              }\\n              authorCanPushToRepository\\n              state\\n              body\\n              createdAt\\n            }\\n          }\\n          reviewThreads(first: 100) {\\n            totalCount\\n            nodes {\\n              isResolved\\n              path\\n              comments(first: 100) {\\n                totalCount\\n                nodes {\\n                  id\\n                  author {\\n                    __typename\\n                    login\\n                    avatarUrl\\n                  }\\n                  createdAt\\n                  body\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n      rateLimit {\\n        cost\\n      }\\n    }\",\"variables\":{\"id\":\"PR_kwDOFFj3yM53-IjI\"}}"
          },
          "queryString": [],
          "url": "https://api.github.com/graphql"
        },
        "response": {
          "bodySize": 2032,
          "content": {
            "mimeType": "application/json; charset=utf-8",
            "size": 2032,
            "text": "{\"data\":{\"node\":{\"number\":2632,\"title\":\"remove deprecated (DocValues,Norms)FieldExistsQuery use\",\"repository\":{\"nameWithOwner\":\"apache/solr\"},\"createdAt\":\"2024-08-09T17:18:47Z\",\"updatedAt\":\"2024-08-23T19:12:59Z\",\"state\":\"OPEN\",\"url\":\"https://github.com/apache/solr/pull/2632\",\"isDraft\":false,\"closed\":false,\"merged\":false,\"reviewDecision\":\"CHANGES_REQUESTED\",\"additions\":25,\"deletions\":29,\"author\":{\"__typename\":\"User\",\"login\":\"cpoerschke\",\"avatarUrl\":\"https://avatars.githubusercontent.com/u/6458642?u=8ccfc26ce7209695b2fcca628a59baca42cff00f&v=4\"},\"statusCheckRollup\":{\"state\":\"SUCCESS\"},\"comments\":{\"totalCount\":0,\"nodes\":[]},\"reviewRequests\":{\"totalCount\":1,\"nodes\":[{\"requestedReviewer\":{\"__typename\":\"User\",\"login\":\"HoustonPutman\",\"avatarUrl\":\"https://avatars.githubusercontent.com/u/3376422?u=323311c61ac2b04e5deac436faaa4f4309fe7beb&v=4\"}}]},\"reviews\":{\"totalCount\":1,\"nodes\":[{\"id\":\"PRR_kwDOFFj3yM6GlVVP\",\"author\":{\"__typename\":\"User\",\"login\":\"dsmiley\",\"avatarUrl\":\"https://avatars.githubusercontent.com/u/377295?u=85f6ade89e5b34f001267475e806da2a52b2755a&v=4\"},\"authorCanPushToRepository\":true,\"state\":\"CHANGES_REQUESTED\",\"body\":\"As there is now FieldExistsQuery covering a range of cases (not just even docValues & norms), this probably obsoletes complexity inside FieldType.getExistenceQuery.  Can we just call that and remove getSpecializedExistenceQuery as needless in lieu of subtypes overriding getExistenceQuery?\\r\\n\\r\\nCC @HoustonPutman as you worked on this method\",\"createdAt\":\"2024-08-23T19:07:24Z\"}]},\"reviewThreads\":{\"totalCount\":1,\"nodes\":[{\"isResolved\":false,\"path\":\"solr/core/src/java/org/apache/solr/search/facet/MissingAgg.java\",\"comments\":{\"totalCount\":1,\"nodes\":[{\"id\":\"PRRC_kwDOFFj3yM5nFK8J\",\"author\":{\"__typename\":\"User\",\"login\":\"dsmiley\",\"avatarUrl\":\"https://avatars.githubusercontent.com/u/377295?u=85f6ade89e5b34f001267475e806da2a52b2755a&v=4\"},\"createdAt\":\"2024-08-23T19:07:24Z\",\"body\":\"I suspect this code pre-dated FieldType.getExistenceQuery -- just call that.\"}]}}]}},\"rateLimit\":{\"cost\":1}}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "access-control-expose-headers",
              "value": "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "content-security-policy",
              "value": "default-src 'none'"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "date",
              "value": "Tue, 27 Aug 2024 14:48:35 GMT"
            },
            {
              "name": "referrer-policy",
              "value": "origin-when-cross-origin, strict-origin-when-cross-origin"
            },
            {
              "name": "server",
              "value": "github.com"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubdomains; preload"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding, Accept, X-Requested-With"
            },
            {
              "name": "x-accepted-oauth-scopes",
              "value": "repo"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "deny"
            },
            {
              "name": "x-github-media-type",
              "value": "github.v3; format=json"
            },
            {
              "name": "x-github-request-id",
              "value": "C805:B6DE5:3880BFF:392D33F:66CDE742"
            },
            {
              "name": "x-oauth-scopes",
              "value": "read:org, repo, user"
            },
            {
              "name": "x-ratelimit-limit",
              "value": "5000"
            },
            {
              "name": "x-ratelimit-remaining",
              "value": "4889"
            },
            {
              "name": "x-ratelimit-reset",
              "value": "1724772326"
            },
            {
              "name": "x-ratelimit-resource",
              "value": "graphql"
            },
            {
              "name": "x-ratelimit-used",
              "value": "111"
            },
            {
              "name": "x-xss-protection",
              "value": "0"
            }
          ],
          "headersSize": 1137,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2024-08-27T14:48:34.692Z",
        "time": 576,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 576
        }
      }
    ],
    "pages": [],
    "version": "1.2"
  }
}

name: Deploy

on:
  push:
    branches: [main]

permissions:
  contents: read
  pages: write
  deployments: write
  id-token: write 

# Prevent two versions from being deployed in parallel.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  webapp:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.5.0
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Install dependencies
        run: pnpm install --filter webapp...
      - name: Build webapp
        run: pnpm run build --filter webapp...
        env:
          VITE_COMMIT_SHA: ${{ github.sha }}
          MERGEABLE_GITHUB_URLS: https://api.github.com
      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_TOKEN }}
          accountId: 1f74b8302712fd67d5eddea8c96eb776
          projectName: mergeable
          workingDirectory: apps/webapp
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
  website:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.5.0
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Install dependencies
        run: pnpm install --filter website...
      - name: Build website
        run: pnpm run build --filter website...
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/website/dist/
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  telemetry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Publish to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_TOKEN }}
          workingDirectory: apps/telemetry
  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Publish to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_TOKEN }}
          workingDirectory: apps/backend